<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.misaka.bili.live.dao.BiliLiveDao">

    <resultMap type="com.misaka.bili.live.entity.BiliLive" id="BiliLiveMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="biliLiveRoomId" column="bili_live_room_id" jdbcType="INTEGER"/>
        <result property="nick" column="nick" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="BiliLiveMap">
        select
          id, bili_live_room_id, nick, create_time, update_time
        from misaka.bili_live
        where id = #{id}
    </select>

     <select id="queryByRoomId" resultMap="BiliLiveMap">
        select
          id, bili_live_room_id, nick, create_time, update_time
        from misaka.bili_live
        where bili_live_room_id = #{roomId}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="BiliLiveMap">
        select
          id, bili_live_room_id, nick, create_time, update_time
        from misaka.bili_live
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="BiliLiveMap">
        select
        id, bili_live_room_id, nick, create_time, update_time
        from misaka.bili_live
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="biliLiveRoomId != null">
                and bili_live_room_id = #{biliLiveRoomId}
            </if>
            <if test="nick != null and nick != ''">
                and nick = #{nick}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into misaka.bili_live(bili_live_room_id, nick, create_time, update_time)
        values (#{biliLiveRoomId}, #{nick}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into misaka.bili_live(bili_live_room_id, nick, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.biliLiveRoomId}, #{entity.nick}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into misaka.bili_live(bili_live_room_id, nick, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.biliLiveRoomId}, #{entity.nick}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        bili_live_room_id = values(bili_live_room_id) , nick = values(nick) , create_time = values(create_time) ,
        update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update misaka.bili_live
        <set>
            <if test="biliLiveRoomId != null">
                bili_live_room_id = #{biliLiveRoomId},
            </if>
            <if test="nick != null and nick != ''">
                nick = #{nick},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from misaka.bili_live where id = #{id}
    </delete>

</mapper>